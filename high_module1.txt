*비디오를 넣고 싶으면 우선 비디오 파일을 작업 폴더 안에 준비한다. 
<video>
  <source src="비디오파일경로">
</video>

*비디오 태그를 넣을 수 있는 속성
<video autoplay muted loop poster="썸네일경로" preload="metadata">
  <source src="비디오파일경로">
</video>

muted = 음소거 상태
autoplay = 자동재성(muted와 함께 넣어야 작동)
poster = 썸네일이미지
preload = 영상을 먼저 다운을 받을지 말지를 선택함(auto, metadata, none 사용가능)

*비디오를 '배경'으로 쓰고 싶다면
유행은 지났지만 어떻게 하는지 알아보자
일반적은 Youtube 비디오 넣는 방법처럼 <iframe>코드 복붙 이런게 아니라
비디오 파일을 직접 다운받아서 같은 폴더에 준비하고 다음처럼 레이아웃 짜면 됨

<div class="video-box">
    <video class="video-container" autoplay muted loop>
        <source src="img/bridge.mp4" type="video/mp4">
    </video>
    <h3 class="video-title">Buy Our Shoes!</h3>
</div>

source 파일형식을 여러개 준비할 경우 브라우저에 최적화된 비디오 파일을 지가 알아서 넣으니 여러가지
확자자의 비디오 파일이 있으면 <source> 여러개 넣는 것도 좋은 선택이다.

*어떤 요소를 궁극의 가운데정렬을 하고 싶을 때
이렇게 position absolute를 주고 top, left, transform 속성을 차례로 준다.
그럼 position relative를 가진 부모에 대해 정가운데 위치 시킬 수 있다.
max-width, width등으로 크기 조정을 넣는 것도 좋다.

.video-box {
  height: 500px;
  width: 100%;
  overflow: hidden;
  position: relative;
}

.video-container {
  position: absolute;
  width : 100%;
  top: 50%;
  left: 50%;
  transform : translate(-50%,-50%);
  z-index: 0;
}

여기까지만 하면 비디오가 배경처럼 크게 보이며
그리고 원하는 html을 <video>하단에 적는 식으로 비디오 위에 글쓰고 그럴 수 있음

------------------------------------------------------------------------

**transform 관련 CSS속성들
.box {
  transform : rotate(10deg); 
  transform : translate(10px, 20px);
  transform : scale(2);
  transform : skew(30deg);
  
  /*transform 두개 이상을 한꺼번에 쓰려면*/
  transform : rotate(10deg) translateX(30px);
}

transform은 어떤 요소를 독립적으로 움직이게 만들고 싶을 때 사용.
본인 원래 위치에서 자유롭게 (다른 요소에 영향 없이) 이동하게 된다.

rotate는 회전, translate는 좌표이동, scale은 확대축소, skew는 비틀기
특히 애니메이션을 동작시킬 때 transform 속성을 쓰면 효과적

**복작한 애니메이션 구현법
예전 간단한 a -> b 애니메이션들은 시작스타일, 최종스타일, 트리거, transition 주면 됨
근데 a -> b -> a, a -> 1초정지 -> b 같은 복잡한건 못 함
@keyframes를 쓰면 가능함

1. 가장 먼저 @keyframes를 정의

@keyframes 움찔움찔{
  0% {
    transform : translateX(0px); /* 애니메이션이 0%만큼 동작시 */
  }
  50% {
    transform : translateX(-20px); /* 애니메이션이 50%만큼 동작시 */
  }
  100% {
    transform : translateX(20px); /* 애니메이션이 100%만큼 동작시 */
  }
}

@keyframes는 커스텀 애니메이션을 정의하기 위한 공간이라고 생각하면 됨
'움찔움찔'이라는 애니메이션을
0% 진행했을 때의 CSS,

50% 진행했을 때의 CSS,

100% 진행했을 때의 CSS를 각각 작성합니다.

(% 수치는 맘대로 변경, 추가 가능합니다)

2. keyframes를 원하는 곳에 첨부
.box:hover {
    animation-name : 움찔움찔;
    animation-duration : 1s;
}
animation 속성을 이용하시면 애니메이션을 동작시킬 수 있음
꼭 필요한 속성은 name과 duration이고 애니메이션 이름을 name에 
동작시간을 duration에 넣으면 됨

3. 애니메이션 세부조정하기

.box:hover {
  animation-name : 움찔움찔;
  animation-duration : 1s;
  animation-timing-function : linear; /*베지어 주기*/
  animation-delay : 1s; /*시작 전 딜레이*/
  animation-iteration-count : 3; /*몇회 반복할것인가*/
  animation-play-state : paused;  /*애니메이션을 멈추고 싶은 경우 자바스크립트로 이거 조정*/
  animation-fill-mode: forwards;  /*애니메이션 끝난 후에 원상복구 하지말고 정지*/
}